[PATHS]
# Persistant data storage for the testcase
TALER_TEST_HOME = test_taler_exchange_httpd_home/


[exchange]
# Currency supported by the exchange (can only be one)
CURRENCY = EUR

# Wire format supported by the exchange
# We use 'test' for testing of the actual
# coin operations.
WIREFORMAT = test

# HTTP port the exchange listens to
PORT = 8081

# Master public key used to sign the exchange's various keys
MASTER_PUBLIC_KEY = 98NJW3CQHZQGQXTY3K85K531XKPAPAVV4Q5V8PYYRR00NJGZWNVG

# How to access our database
DB = postgres

# Is this is a testcase, use transient DB actions?
TESTRUN = YES




[exchangedb-postgres]
DB_CONN_STR = "postgres:///talercheck"


[wire-outgoing-test]
# What is the main website of the bank?
BANK_URI = "http://localhost:8082/"

# From which account at the 'bank' should outgoing
# wire transfers be made?
EXCHANGE_ACCOUNT_NUMBER = 3


# Coins for the tests.
[coin_eur_ct_1]
value = EUR:0.01
duration_overlap = 5 minutes
duration_withdraw = 7 days
duration_spend = 2 years
duration_legal = 3 years
fee_withdraw = EUR:0.00
fee_deposit = EUR:0.00
fee_refresh = EUR:0.01
rsa_keysize = 1024

[coin_eur_ct_10]
value = EUR:0.10
duration_overlap = 5 minutes
duration_withdraw = 7 days
duration_spend = 2 years
duration_legal = 3 years
fee_withdraw = EUR:0.01
fee_deposit = EUR:0.01
fee_refresh = EUR:0.03
rsa_keysize = 1024

[coin_eur_1]
value = EUR:1
duration_overlap = 5 minutes
duration_withdraw = 7 days
duration_spend = 2 years
duration_legal = 3 years
fee_withdraw = EUR:0.01
fee_deposit = EUR:0.01
fee_refresh = EUR:0.03
rsa_keysize = 1024
